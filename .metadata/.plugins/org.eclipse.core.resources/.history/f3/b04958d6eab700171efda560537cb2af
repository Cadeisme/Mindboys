package io.github.fairyfruit.mindboys.rendering;

import static org.lwjgl.opengl.GL11.GL_COLOR_BUFFER_BIT;
import static org.lwjgl.opengl.GL11.GL_DEPTH_BUFFER_BIT;
import static org.lwjgl.opengl.GL11.glClear;
import static org.lwjgl.opengl.GL11.glClearColor;

import org.joml.Matrix4f;
import org.joml.Vector3f;

import io.github.fairyfruit.mindboys.toolbox.Timer;

public class Renderer {

	private static final Matrix4f viewMatrix = new Matrix4f();
	
	public static void init(){
		glClearColor(1.0f, 0.0f, 0.0f, 0.0f); //Set clear color
	}
	
	public static void render(float alpha){
		glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); //clear framebuffer
		
		//swap the color buffers
		Window.instance.swapBuffers();
		
		Timer.instance.updateFPS();
		
	}
	
	public static Matrix4f getViewMatrix(Camera cam){
		Vector3f pos = cam.getPosition();
		Vector3f rot = cam.getRotation();
		
		viewMatrix.identity();
		
		viewMatrix.rotate((float)Math.toRadians(rot.x), new Vector3f(1,0,0))
		.rotate((float)Math.toRadians(rot.y), new Vector3f(0,1,0));
		viewMatrix.translate(-pos.x,-pos.y,-pos.z);
		return viewMatrix;
	}
	
	public static Matrix4f getModelViewMatrix(){
		
	}
}
